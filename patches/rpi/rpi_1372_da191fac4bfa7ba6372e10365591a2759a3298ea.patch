commit da191fac4bfa7ba6372e10365591a2759a3298ea
Author: Vinayak Menon <vinmenon@codeaurora.org>
Date:   Mon Feb 22 19:15:44 2016 +0530

    of: alloc anywhere from memblock if range not specified
    
    commit e53b50c0cbe392c946807abf7d07615a3c588642 upstream.
    
    early_init_dt_alloc_reserved_memory_arch passes end as 0 to
    __memblock_alloc_base, when limits are not specified. But
    __memblock_alloc_base takes end value of 0 as MEMBLOCK_ALLOC_ACCESSIBLE
    and limits the end to memblock.current_limit. This results in regions
    never being placed in HIGHMEM area, for e.g. CMA.
    Let __memblock_alloc_base allocate from anywhere in memory if limits are
    not specified.
    
    Acked-by: Marek Szyprowski <m.szyprowski@samsung.com>
    Signed-off-by: Vinayak Menon <vinmenon@codeaurora.org>
    Signed-off-by: Rob Herring <robh@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/of/of_reserved_mem.c b/drivers/of/of_reserved_mem.c
index 1a3556a..ed01c01 100644
--- a/drivers/of/of_reserved_mem.c
+++ b/drivers/of/of_reserved_mem.c
@@ -32,11 +32,13 @@ int __init __weak early_init_dt_alloc_reserved_memory_arch(phys_addr_t size,
 	phys_addr_t align, phys_addr_t start, phys_addr_t end, bool nomap,
 	phys_addr_t *res_base)
 {
+	phys_addr_t base;
 	/*
 	 * We use __memblock_alloc_base() because memblock_alloc_base()
 	 * panic()s on allocation failure.
 	 */
-	phys_addr_t base = __memblock_alloc_base(size, align, end);
+	end = !end ? MEMBLOCK_ALLOC_ANYWHERE : end;
+	base = __memblock_alloc_base(size, align, end);
 	if (!base)
 		return -ENOMEM;
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1372_da191fac4bfa7ba6372e10365591a2759a3298ea.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1372_da191fac4bfa7ba6372e10365591a2759a3298ea.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.

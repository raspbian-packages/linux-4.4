commit b1999fa6e8145305a6c8bda30ea20783717708e6
Author: Thierry Reding <treding@nvidia.com>
Date:   Wed Dec 2 16:54:50 2015 +0100

    regulator: core: Fix nested locking of supplies
    
    commit 70a7fb80e85ae7f78f8e90cec3fbd862ea6a4d4b upstream.
    
    Commit fa731ac7ea04 ("regulator: core: avoid unused variable warning")
    introduced a subtle change in how supplies are locked. Where previously
    code was always locking the regulator of the current iteration, the new
    implementation only locks the regulator if it has a supply. For any
    given power tree that means that the root will never get locked.
    
    On the other hand the regulator_unlock_supply() will still release all
    the locks, which in turn causes the lock debugging code to warn about a
    mutex being unlocked which wasn't locked.
    
    Cc: Mark Brown <broonie@kernel.org>
    Cc: Arnd Bergmann <arnd@arndb.de>
    Fixes: Fixes: fa731ac7ea04 ("regulator: core: avoid unused variable warning")
    Signed-off-by: Thierry Reding <treding@nvidia.com>
    Signed-off-by: Mark Brown <broonie@kernel.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

diff --git a/drivers/regulator/core.c b/drivers/regulator/core.c
index c70017d..7b94b8e 100644
--- a/drivers/regulator/core.c
+++ b/drivers/regulator/core.c
@@ -132,6 +132,14 @@ static bool have_full_constraints(void)
 	return has_full_constraints || of_have_populated_dt();
 }
 
+static inline struct regulator_dev *rdev_get_supply(struct regulator_dev *rdev)
+{
+	if (rdev && rdev->supply)
+		return rdev->supply->rdev;
+
+	return NULL;
+}
+
 /**
  * regulator_lock_supply - lock a regulator and its supplies
  * @rdev:         regulator source
@@ -140,7 +148,7 @@ static void regulator_lock_supply(struct regulator_dev *rdev)
 {
 	int i;
 
-	for (i = 0; rdev->supply; rdev = rdev->supply->rdev, i++)
+	for (i = 0; rdev->supply; rdev = rdev_get_supply(rdev), i++)
 		mutex_lock_nested(&rdev->mutex, i);
 }
 
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1241_b1999fa6e8145305a6c8bda30ea20783717708e6.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1241_b1999fa6e8145305a6c8bda30ea20783717708e6.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.

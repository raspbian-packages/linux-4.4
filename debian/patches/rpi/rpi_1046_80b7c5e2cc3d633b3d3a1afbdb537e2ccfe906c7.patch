commit 80b7c5e2cc3d633b3d3a1afbdb537e2ccfe906c7
Author: Noralf Trønnes <noralf@tronnes.org>
Date:   Fri Jun 26 14:25:01 2015 +0200

    firmware: bcm2835: Support ARCH_BCM270x
    
    Support booting without Device Tree.
    Turn on USB power.
    Load driver early because of lacking support for deferred probing
    in many drivers.
    
    Signed-off-by: Noralf Trønnes <noralf@tronnes.org>

diff --git a/drivers/firmware/raspberrypi.c b/drivers/firmware/raspberrypi.c
index dd506cd3..b980d53 100644
--- a/drivers/firmware/raspberrypi.c
+++ b/drivers/firmware/raspberrypi.c
@@ -28,6 +28,8 @@ struct rpi_firmware {
 	u32 enabled;
 };
 
+static struct platform_device *g_pdev;
+
 static DEFINE_MUTEX(transaction_lock);
 
 static void response_callback(struct mbox_client *cl, void *msg)
@@ -183,6 +185,25 @@ rpi_firmware_print_firmware_revision(struct rpi_firmware *fw)
 	}
 }
 
+static int raspberrypi_firmware_set_power(struct rpi_firmware *fw,
+					  u32 domain, bool on)
+{
+	struct {
+		u32 domain;
+		u32 on;
+	} packet;
+	int ret;
+
+	packet.domain = domain;
+	packet.on = on;
+	ret = rpi_firmware_property(fw, RPI_FIRMWARE_SET_POWER_STATE,
+				    &packet, sizeof(packet));
+	if (!ret && packet.on != on)
+		ret = -EINVAL;
+
+	return ret;
+}
+
 static int rpi_firmware_probe(struct platform_device *pdev)
 {
 	struct device *dev = &pdev->dev;
@@ -207,9 +228,13 @@ static int rpi_firmware_probe(struct platform_device *pdev)
 	init_completion(&fw->c);
 
 	platform_set_drvdata(pdev, fw);
+	g_pdev = pdev;
 
 	rpi_firmware_print_firmware_revision(fw);
 
+	if (raspberrypi_firmware_set_power(fw, 3, true))
+		dev_err(dev, "failed to turn on USB power\n");
+
 	return 0;
 }
 
@@ -218,6 +243,7 @@ static int rpi_firmware_remove(struct platform_device *pdev)
 	struct rpi_firmware *fw = platform_get_drvdata(pdev);
 
 	mbox_free_channel(fw->chan);
+	g_pdev = NULL;
 
 	return 0;
 }
@@ -230,7 +256,7 @@ static int rpi_firmware_remove(struct platform_device *pdev)
  */
 struct rpi_firmware *rpi_firmware_get(struct device_node *firmware_node)
 {
-	struct platform_device *pdev = of_find_device_by_node(firmware_node);
+	struct platform_device *pdev = g_pdev;
 
 	if (!pdev)
 		return NULL;
@@ -253,7 +279,18 @@ static struct platform_driver rpi_firmware_driver = {
 	.probe		= rpi_firmware_probe,
 	.remove		= rpi_firmware_remove,
 };
-module_platform_driver(rpi_firmware_driver);
+
+static int __init rpi_firmware_init(void)
+{
+	return platform_driver_register(&rpi_firmware_driver);
+}
+subsys_initcall(rpi_firmware_init);
+
+static void __init rpi_firmware_exit(void)
+{
+	platform_driver_unregister(&rpi_firmware_driver);
+}
+module_exit(rpi_firmware_exit);
 
 MODULE_AUTHOR("Eric Anholt <eric@anholt.net>");
 MODULE_DESCRIPTION("Raspberry Pi firmware driver");
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1046_80b7c5e2cc3d633b3d3a1afbdb537e2ccfe906c7.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1046_80b7c5e2cc3d633b3d3a1afbdb537e2ccfe906c7.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.

commit 55e8519aa4c86b37f1933e8e53c6e97372d61871
Author: Craig Roberts <cjr@craigroberts.net>
Date:   Tue Feb 16 10:03:42 2016 +0000

    Updated smsc95xx driver to check for a valid MAC address in eeprom before using smsc95xx.macaddr parameter passed on command line.
    
    The built-in RPi adaptor will still get a MAC address based on the parameter passed on the command line as the RPi hardware does not have an eeprom,
    however usb->ethernet adaptors using the same driver should have an eeprom with MAC address as part of their hardware and therefore will use this
    meaning they don't end up with the same MAC address as the built-in RPi adaptor.

diff --git a/drivers/net/usb/smsc95xx.c b/drivers/net/usb/smsc95xx.c
index 3244a90..7483222 100755
--- a/drivers/net/usb/smsc95xx.c
+++ b/drivers/net/usb/smsc95xx.c
@@ -817,10 +817,6 @@ static int smsc95xx_is_macaddr_param(struct usbnet *dev, u8 *dev_mac)
 
 static void smsc95xx_init_mac_address(struct usbnet *dev)
 {
-       /* Check module parameters */
-       if (smsc95xx_is_macaddr_param(dev, dev->net->dev_addr))
-               return;
-
 	/* try reading mac address from EEPROM */
 	if (smsc95xx_read_eeprom(dev, EEPROM_MAC_OFFSET, ETH_ALEN,
 			dev->net->dev_addr) == 0) {
@@ -831,7 +827,11 @@ static void smsc95xx_init_mac_address(struct usbnet *dev)
 		}
 	}
 
-	/* no eeprom, or eeprom values are invalid. generate random MAC */
+	/* Check module parameters */
+	if (smsc95xx_is_macaddr_param(dev, dev->net->dev_addr))
+		return;
+
+	/* no eeprom, or eeprom values are invalid, and no module parameter specified to set MAC. Generate random MAC */
 	eth_hw_addr_random(dev->net);
 	netif_dbg(dev, ifup, dev->net, "MAC address set to eth_random_addr\n");
 }
diff -uN a/1.txt b/1.txt
--- a/dummy/rpi_1147_55e8519aa4c86b37f1933e8e53c6e97372d61871.txt	1970-01-01 00:00:00.000000000 +0000
+++ b/dummy/rpi_1147_55e8519aa4c86b37f1933e8e53c6e97372d61871.txt	2013-12-23 04:07:40.000000000 +0000
@@ -0,0 +1 @@
+dummy file to ensure patch has content.
